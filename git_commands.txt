For getting a fork of this project:

    goto github website and login
    goto cycl0ne's repository (https://github.com/cycl0ne/poweros_x86) in github website
    click on Fork.
    https://github.com/snayaksnayak/poweros_x86.git gets created.
    now goto working folder in your PC
    #git clone https://github.com/snayaksnayak/poweros_x86.git
    #cd poweros_x86
    #git remote show origin
    #git remote add upstream https://github.com/cycl0ne/poweros_x86.git
    #git remote show upstream

For daily work:

    #git checkout -b a_feature_branch
    #git branch -va
    #touch hello.c (create new file hello.c)
    #vim hi.c (modify existing file hi.c)
    #git meld (to see the diff) (https://github.com/wmanley/git-meld)
    #git status
    #git add hi.c hello.c (these new or modified files will be commited next)
    #git checkout -- hurray.c (to undo changes in hurray.c)
    #git rm --cached somefile.txt (untrack a tracked file)
    #git status
    #git commit -m "comment"
    #git clean -dnx | cut -c 14- (to check unversioned files and dirs)
    #git clean -dxf (to remove unversioned files and dirs) (consider #echo > ./.gitignore)
    #git log --graph --abbrev-commit --decorate --all --full-history --pretty=format:"%h%x09%d%x20%s"
    #git checkout master
    #git branch -va
    #git merge --no-ff a_feature_branch
    #git push origin master
    #git push -u origin a_feature_branch
    loop above steps.

For getting new things from cycl0ne's repository:

    #git fetch upstream
    #git merge --no-ff upstream/master
    #git mergetool
    (in meld tool, do modifications to file shown in middle tab and save;
    first press "merge all non conflicting",
    then see what to be done for conflicting things showing in red,
    there must be at least one conflicting thing)
    #git status
    #git commit -m "comment"
    #git meld e91bdff ee6d110 (to see diff between two commits e91bdff and ee6d110)
    #git meld HEAD~1 HEAD (to see diff between HEAD-1 and HEAD)
    #git push origin master
    Goto github website and check your master updated.

delete a local branch
    #git branch -D gfxtest

undo stagging area changes and working area changes
	#git reset --hard HEAD

undo a commit permanently
	#git reset --hard HEAD~1

merge from a upstream branch to local branch
	#git checkout -b gfxtest
	#git fetch upstream
	#git merge --no-ff upstream/development
	#git mergetool
	(in meld tool, do modifications to file shown in middle tab and save;
	first press "merge all non conflicting",
	then see what to be for conflicting things showing in red,
	there must be at least one conflicting thing)

to see config items:
	for all users (collected from /etc/gitconfig)
	#git config --system --list
	for current user (collected from ~/.gitconfig)
	#git config --global --list
	for current repository (collected from .git/config)
	#git config --list

for creating a new repository (go inside the working folder)
	#git init

for adding files for commit
	#git add -A 	(stages "new untracked files" and "modified files" and "deleted files")
    #git add .		(stages "new untracked files" and "modified files", but not "deleted files")
    #git add -u		(stages "modified files" and "deleted files", but not "new untracked files")

if you want to undo things (after you do a merge and before commiting it) do
	#git reset --merge
	#git clean -dxf


